.mainBody
	= render partial: 'layouts/sidebar', locals: { section: 1 } # 1 for artworks
	.gallery
		.galleryTopbar
			.titleSubmit
				%h1.forumTitle
					=@category.name
					Posts
				.submitButton
					- if user_signed_in?
						= link_to "Submit", new_category_artwork_path, :class => "btn btn-m btn-orange"
			.searchForm
				= search_form_for [@category, @search], :class => "searchBar" do |f|
					.searchInput
						= f.search_field :title_cont
					= f.submit 'Search', :class => "btn btn-m btn-light"

		.artworkThumbSection
			#arts.transitions-enabled
				- @artworks.each do |artwork|
					%div.artworkContainer
						.thumbnail
							- if artwork.pictures.any?
								.thumbToggles
									- i = 1 # counter to assign class names to toggles
									- unless artwork.pictures.size <= 1
										- while (i <= artwork.pictures.size) do
											.tToggle{:id => i.to_s} 
											- i+=1 #add one to counter per loop

								- c = 1 #counter to assign class names to thumbs
								- artwork.pictures.each do |p|
									.thumbImg{class: "hidden thumb-" + c.to_s}
										= image_tag p.image.url
									- c+=1 #add one to counter per loop
						.infoSection	
							.info
								%h2.title= link_to artwork.title, artwork
								%p.category
									- if artwork.category_id == nil
										Uncategorized
									- else 
										= Category.find(artwork.category_id).name
								%p
									Tags: 
									= raw artwork.tag_list.map { |t| link_to t, category_artwork_tag_path(artwork.category_id, t), :class => "tagLink"}.join(', ')
								- if artwork.completed == true
									%p.answered Answered
								- else
									%p.unanswered Unanswered

							.voteSection	
								.vote
									= link_to like_artwork_path(artwork), method: :put do
										= image_tag "up.svg", :class => "arrow"
								.voteCount
									- @voteCount = (artwork.get_upvotes.size) - (artwork.get_downvotes.size)
									%p= @voteCount
								.vote	
									= link_to dislike_artwork_path(artwork), method: :put do
										= image_tag "down.svg", :class => "arrow"
									/ %p= artwork.get_downvotes.size
						.extraInfo	
							- if artwork.user != nil
								.userThumb
									=image_tag artwork.user.avatar.url(:thumb), :class => "artUserThumb"
									=link_to artwork.user.username, artwork.user, :class => "artUserName"
							-else
								%p [User Deleted]		
							%p.date
								Posted 
								= time_ago_in_words(artwork.created_at)
								ago

		= will_paginate @artworks, inner_window: 1, outer_window: 0


%script{type: "text/javascript"}
	:plain
		$('.thumb-1').addClass('visible');
		$('.thumb-1').removeClass('hidden');

		$('.thumbnail').hover(function() {
			var activeThumb = this;
			$('.tToggle', activeThumb).hover(function() {
				var num = this.id;
				var thumbClass = "thumb-"+num;
				$('.thumbImg', activeThumb).removeClass('visible');
				$('.thumbImg', activeThumb).addClass('hidden');
				$('.'+thumbClass, activeThumb).addClass('visible');
				$('.'+thumbClass, activeThumb).removeClass('hidden');
			});
		});