.titleSection
	%h1.threadTitle= @artwork.title
.artImageSection
	.artImageGallery
		- unless @pictures.empty?
			- c = 1 #counter to assign class names to images
			- @pictures.each do |pic|
				.artImage{class: "hidden image-" + c.to_s}
					= image_tag pic.image.url
					- c+=1 #add one to counter per loop

					- if user_signed_in?
						.artImageControls
							- if @artwork.user.id == current_user.id
								- unless @pictures.size == 1 #if there is only one picture, dont show the delete list
									= link_to "Delete Image", picture_path(pic.id), :data => { :confirm => "Are you sure?"}, :method => :delete, :class => "btn btn-s btn-light"
							= link_to "New Note", new_picture_note_path(pic.id), :class => "btn btn-s btn-orange"
				- unless pic.notes.size == 0
					- pic.notes.each do |note|
						= image_tag note.noteImg.url, :class => "noteImage"
	- @pictures.each do |pic|
		.noteSection
			- unless pic.notes.size == 0
				%h2 Notes
				- pic.notes.each do |note|
					.note
						%p= note.content
						%p
							Posted by:
							= note.user.username
						- if user_signed_in? && current_user.id == note.user_id
							=link_to "Delete Note", note , method: :delete, :remote => true, data: {confirm: "Are you sure you want to do this?"}, :class => "btn btn-s btn-dark"
		
	.artToggles
		- i = 1 # counter to assign class names to toggles
		- unless @pictures.size <= 1
			- while (i <= @pictures.size) do
				%label.tContainer 
					Image
					= i.to_s
					%input{:type => "radio", :name => "artToggle", :checked => "", :class => "artToggle", :value => i.to_s}
				- i+=1 #add one to counter per loop


.descriptionSection
	%p= @artwork.description
	%p
		Category:
		- if @artwork.category_id == nil
			Uncategorized
		- else 
			= Category.find(@artwork.category_id).name
	%p
		Tags: 
		= @artwork.tag_list
	- if user_signed_in?
		%div.upArrow
			= link_to "Upvote", like_artwork_path(@artwork), method: :put
			= @artwork.get_upvotes.size
		%div.downArrow
			= link_to "Downvote", dislike_artwork_path(@artwork), method: :put
			= @artwork.get_downvotes.size	
		- if @artwork.completed == true
			%p.answered Completed
		- else
			%p.unanswered In Progress
	- if user_signed_in?
		- if @artwork.user.id == current_user.id
			= link_to "Delete", artwork_path(@artwork), method: :delete, data: {confirm: "Are you sure you want to do this?"}, :class => "btn btn-m btn-dark"
			- if @artwork.completed != true
				= link_to "Set as Completed", set_completed_artwork_path(@artwork), remote: true, method: :put, :class => "btn btn-m btn-orange"
			.addImageSection
				%h3 Add another Image:
				= render partial: "picture_form"

- if @artwork.completed == true
	%h3.commentHeader Reviews

	= render @artwork.reviews

	- if user_signed_in?
		%p Add a review now that this artwork is complete!
		= render 'reviews/form'


%h3.commentHeader Comments

- if user_signed_in?
	= render partial: "comments/form", locals: {commentable: @artwork}

= nested_comments @comments

%script{type: "text/javascript"}
	:plain
		$('.image-1').addClass('visible');
		$('.image-1').removeClass('hidden');
		$('input[type=radio][name=artToggle]').change(function() {
			var num = this.value;
			var imgClass = "image-"+num;
			$('.artImage').removeClass('visible');
			$('.artImage').addClass('hidden');
			$('.'+imgClass).addClass('visible');
			$('.'+imgClass).removeClass('hidden');
			
		});
