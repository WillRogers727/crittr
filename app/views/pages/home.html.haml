.introSection
	.introText
		%h1 Welcome to Crittr
		%p A community for you to get feedback on your work in progress creations.
		%p Visit the artwork forum now to start giving and receiving feedback.
		%p Got a quick question or need some tips? Use the question forum to get answers fast!
	.introControls
		=link_to "Artwork Forum", category_artworks_path(1), :class => "btn btn-l btn-light"
		=link_to "Question Forum", category_posts_path(1), :class => "btn btn-l btn-light"

.userArtToggle.galSection
	%h3.commentHeader= @artTitle
	=image_tag "toggleUpDark.png", :class => "darkToggleArrow" 
.userArtContent
	- if user_signed_in?
		- if current_user.following.count == 0
			.noContent
				%p Start following users to see their lastest artwork submissions appear here!
		- else
			.artworkThumbSection
				#arts.transitions-enabled
					- @artworks.each do |artwork|
						.artSpacer
							%div.artworkContainer
								.thumbnail
									- if artwork.pictures.any?
										- i = 1 # counter to assign class names to toggles
										- unless artwork.pictures.size <= 1
											- while (i <= artwork.pictures.size) do
												.tToggle{:id => i.to_s} 
												- i+=1 #add one to counter per loop

										- c = 1 #counter to assign class names to thumbs
										- artwork.pictures.each do |p|
											.thumbImg{class: "hidden thumb-" + c.to_s}
												= image_tag p.image.url
											- c+=1 #add one to counter per loop
								.infoSection	
									.info
										%h2.title= link_to artwork.title, artwork
										%p.category
											- if artwork.category_id == nil
												Uncategorized
											- else 
												= Category.find(artwork.category_id).name
										%p
											Tags: 
											= raw artwork.tag_list.map { |t| link_to t, category_artwork_tag_path(artwork.category_id, t), :class => "tagLink"}.join(', ')
										%p
											- if artwork.completed == true
												%p.answered Completed
											- else
												%p.unanswered In Progress
										%p
											- if artwork.nsfw == true
												%p.nsfw NSFW

									.voteSection.artVoteSection	
										.vote
											= link_to like_artwork_path(artwork), method: :put, remote: true do
												- if user_signed_in?
													- if current_user.voted_up_on? artwork
														.triangle.arrow.voted
													-else
														.triangle.arrow
										.voteCount
											%p.artVotes= @voteCount = (artwork.get_upvotes.size) - (artwork.get_downvotes.size)
										.vote
											= link_to dislike_artwork_path(artwork), method: :put, remote: true do
												- if user_signed_in?
													- if current_user.voted_down_on? artwork
														.triangle.triDown.arrow.voted
													- else
														.triangle.triDown.arrow
								.extraInfo	
									- if artwork.user != nil
										.userThumb
											=image_tag artwork.user.avatar.url(:thumb), :class => "artUserThumb"
											=link_to artwork.user.username, artwork.user, :class => "artUserName"
									- else
										%p [User Deleted]
									%p.date
										Posted 
										= time_ago_in_words(artwork.created_at)
										ago


.userPostToggle.galSection
	%h3.commentHeader= @postTitle 
	=image_tag "toggleUpDark.png", :class => "darkToggleArrow" 
.userPostContent
	- if user_signed_in?
		- if current_user.following.count == 0
			.noContent
				%p Start following users to see their lastest question submissions appear here!
		- else
			.gallery.galleryHome
				- @posts.each do |post|
					.postContainer
						.postThumbLeft
							.leftInner
								.leftUpper.leftSection
									%h2.title= link_to post.title, post
								.leftLower.leftSection
									%p
										- if post.category_id == nil
											Uncategorized
										- else 
											= Category.find(post.category_id).name
									%p
										Tags: 
										= raw post.tag_list.map { |t| link_to t, category_post_tag_path(post.category_id, t), :class => "tagLink"}.join(', ')
									%p
										- if post.completed == true
											%p.answered Answered
										- else
											%p.unanswered Unanswered
							.voteSection.postVoteSection	
								.vote
									= link_to like_post_path(post), method: :put, remote: true do
										- if user_signed_in?
											- if current_user.voted_up_on? post
												.triangle.arrow.voted
											-else
												.triangle.arrow
								.voteCount
									%p.postVotes= @voteCount = (post.get_upvotes.size) - (post.get_downvotes.size)
								.vote
									= link_to dislike_post_path(post), method: :put, remote: true do
										- if user_signed_in?
											- if current_user.voted_down_on? post
												.triangle.triDown.arrow.voted
											- else
												.triangle.triDown.arrow
						.postThumbRight
							- if post.user != nil
								.userThumb
									=image_tag post.user.avatar.url(:thumb), :class => "artUserThumb"
									=link_to post.user.username, post.user, :class => "artUserName"
							-else
								%p [User Deleted]		
							%p.date
								Posted
								= time_ago_in_words(post.created_at)
								ago


%script{type: "text/javascript"}
	:plain
		$('.thumb-1').addClass('visible');
		$('.thumb-1').removeClass('hidden');

		$('.thumbnail').hover(function() {
			var activeThumb = this;
			$('.tToggle', activeThumb).hover(function() {
				var num = this.id;
				var thumbClass = "thumb-"+num;
				$('.thumbImg', activeThumb).removeClass('visible');
				$('.thumbImg', activeThumb).addClass('hidden');
				$('.'+thumbClass, activeThumb).addClass('visible');
				$('.'+thumbClass, activeThumb).removeClass('hidden');
			});
		});

		

