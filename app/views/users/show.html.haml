.titleSection.sixtySection
	%h1.threadTitle= @user.username

.profileSection.sixtySection
	.profileInner
		.profilePicSection
			= image_tag @user.avatar.url(:medium)
		.profileInfoSection
			.profileInfo
				%p
					Member Since:
					= @user.created_at.to_date
				%p
					Posts: 
					= (@user.artworks.size) + (@user.posts.size)
				%p
					Comments: 
					= @user.comments.size
				%p
					Reviews: 
					= @user.reviews.size
				%p
					Notes: 
					= @user.notes.size
				%p.following
					Following:
					= @user.following.count
				%p.followers
					Followers
					= @user.followers.count

			.profileControls
				- if user_signed_in?
					- if current_user == @user #if current user's page then add sign put button
						= link_to "Edit Profile", edit_user_registration_path, :class => "btn btn-m btn-dark"
						= link_to "Sign Out", destroy_user_session_path, method: :delete, :class => "btn btn-m btn-orange"
					- else
						= link_to 'Message', conversations_path(sender_id: current_user.id, recipient_id: @user.id), method: 'post', :class => "btn btn-m btn-dark"
						= render 'follow_form'

.userArtToggle.galSection
	%h3.commentHeader Artwork Posts: 
	=image_tag "toggleUpDark.png", :class => "darkToggleArrow" 
.userArtContent
	- if @user.artworks.size == 0
		.noContent
			%p This user hasnt posted any artworks yet!
	- else
		.artworkThumbSection
			#arts.transitions-enabled
				- @artworks.each do |artwork|
					.artSpacer
						%div.artworkContainer
							.thumbnail
								- if artwork.pictures.any?
									.thumbToggles
										- i = 1 # counter to assign class names to toggles
										- unless artwork.pictures.size <= 1
											- while (i <= artwork.pictures.size) do
												.tToggle{:id => i.to_s} 
												- i+=1 #add one to counter per loop

									- c = 1 #counter to assign class names to thumbs
									- artwork.pictures.each do |p|
										.thumbImg{class: "hidden thumb-" + c.to_s}
											= image_tag p.image.url
										- c+=1 #add one to counter per loop
							.infoSection	
								.info
									%h2.title= link_to artwork.title, artwork
									%p.category
										- if artwork.category_id == nil
											Uncategorized
										- else 
											= Category.find(artwork.category_id).name
									%p
										Tags: 
										= raw artwork.tag_list.map { |t| link_to t, category_artwork_tag_path(artwork.category_id, t), :class => "tagLink"}.join(', ')

								.voteSection	
									.vote
										= link_to like_artwork_path(artwork), method: :put do
											= image_tag "up.svg", :class => "arrow"
									.voteCount
										%p= artwork.get_upvotes.size
									.vote	
										= link_to dislike_artwork_path(artwork), method: :put do
											= image_tag "down.svg", :class => "arrow"
										/ %p= artwork.get_downvotes.size
							.extraInfo	
								.userThumb
									=image_tag artwork.user.avatar.url(:thumb), :class => "artUserThumb"
									=link_to artwork.user.username, artwork.user, :class => "artUserName"
								%p.date
									Posted 
									= time_ago_in_words(artwork.created_at)
									ago
	= will_paginate @artworks, inner_window: 1, outer_window: 0


.userPostToggle.galSection
	%h3.commentHeader Question Posts: 
	=image_tag "toggleUpDark.png", :class => "darkToggleArrow" 
.userPostContent
	- if @user.posts.size == 0
		.noContent
			%p This user hasnt posted any questions yet!
	- else
		.gallery
		- @posts.each do |post|
			.postContainer
				.postThumbLeft
					.leftInner
						.leftUpper.leftSection
							%h2.title= link_to post.title, post
						.leftLower.leftSection
							%p
								- if post.category_id == nil
									Uncategorized
								- else 
									= Category.find(post.category_id).name
							%p
								Tags: 
								= raw post.tag_list.map { |t| link_to t, category_post_tag_path(post.category_id, t), :class => "tagLink"}.join(', ')
							%p
								- if post.completed == true
									%p.answered Answered
								- else
									%p.unanswered Unanswered
					.voteSection	
						.vote
							= link_to like_post_path(post), method: :put do
								= image_tag "up.svg", :class => "arrow"
						.voteCount
							- @voteCount = (post.get_upvotes.size) - (post.get_downvotes.size)
							%p= @voteCount
						.vote	
							= link_to dislike_post_path(post), method: :put do
								= image_tag "down.svg", :class => "arrow"
				.postThumbRight
					- if post.user != nil
						.userThumb
							=image_tag post.user.avatar.url(:thumb), :class => "artUserThumb"
							=link_to post.user.username, post.user, :class => "artUserName"
					-else
						%p [User Deleted]		
					%p.date
						Posted
						= time_ago_in_words(post.created_at)
						ago
	= will_paginate @posts, inner_window: 1, outer_window: 0


%script{type: "text/javascript"}
	:plain
		$('.thumb-1').addClass('visible');
		$('.thumb-1').removeClass('hidden');

		$('.thumbnail').hover(function() {
			var activeThumb = this;
			$('.tToggle', activeThumb).hover(function() {
				var num = this.id;
				var thumbClass = "thumb-"+num;
				$('.thumbImg', activeThumb).removeClass('visible');
				$('.thumbImg', activeThumb).addClass('hidden');
				$('.'+thumbClass, activeThumb).addClass('visible');
				$('.'+thumbClass, activeThumb).removeClass('hidden');
			});
		});


					

